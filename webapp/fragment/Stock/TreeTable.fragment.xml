<core:FragmentDefinition xmlns="sap.ui.table" xmlns:mvc="sap.ui.core.mvc" xmlns:m="sap.m" xmlns:u="sap.ui.unified" xmlns:core="sap.ui.core">
	<TreeTable id="TreeTableBasic2" rows="{path:'oStockDataModel>/', parameters: {arrayNames:['MultipleIt']}}" selectionMode="MultiToggle"
toggleOpenState="onPressItem"    cellClick="OnTreecellclick"  visibleRowCount="8"     rowSelectionChange="onRowSelectionChange"  visible="{VisibleModel>/MaterialTable}" class="sapUiSmallMarginTop sapUiSmallMarginBegin sapUiSmallMarginEnd" enableSelectAll="false"
		ariaLabelledBy="title">
		<extension>
			<m:OverflowToolbar style="Clear">
				<m:Title id="title" text="Stock Material Details"/>
				<m:ToolbarSpacer/>
					<m:Button text="Analytics"  id="idana" press="onAnalytics"/>
					<m:Button text="Excess Material"  id="idExcessButton" press="onExcessMaterial"/>
				<!--<m:Button tooltip="Notification" type="Attention" text="{count>/count}" id="onbellid" icon="sap-icon://bell" press="onNotify"/>-->
				<m:Button tooltip="{i18n>addItem}" text="Maintain thresholds" icon="sap-icon://add" id="updatePData" press="updateProductData"/>
				<!--		<Button tooltip="{i18n>addItem}" text="AutoPO"  id="AutopoMaterial" press="AutoPoCreationforMaterial"/>
			-->
				<m:Button tooltip="{i18n>addItem}" text="MassUpdate" id="idMassUpdate" press="MassUpdatePo"/>
				<m:Button tooltip="{i18n>addItem}" text="BuyerSheet" id="idBuyersheet" press="BuyerSheetChat"/>
				<m:Button text="Collapse all" press="onCollapseAll"/>
				<m:Button text="Expand level" press="onExpandFirstLevel"/>
				<m:Button text="Expand selection" press="onExpandSelection"/>
			</m:OverflowToolbar>
		</extension>
		<columns>
			<Column width="15rem">
				<m:Label text="Material/Company Code/Plant/StogLoc"/>
				<template>
					<m:Text text="{oStockDataModel>Material}" wrapping="false"/>
				</template>
			</Column>
			<Column width="9rem">
				<m:Label text="Description"/>
				<template>
					<m:Text text="{oStockDataModel>ShortText}" wrapping="false"/>
				</template>
			</Column>
		
	
			<Column width="8rem" hAlign="Center">
				<m:Label text="Available Qty"/>
				<template>
					<m:ObjectNumber
						number="{= ${oStockDataModel>OsalesOrder} === 'So' ||  ${oStockDataModel>BLabst} === 'AL' || ${oStockDataModel>OsalesOrder} === undefined ? ${oStockDataModel>ALabst} : ${oStockDataModel>ALabst}- ${oStockDataModel>OsalesOrder}}"
						state="{ parts: [ {path: 'oStockDataModel>Labst'}, {path: 'oStockDataModel>Crtlv'}, {path: 'oStockDataModel>Cytlv'}, {path: 'oStockDataModel>Cgtlv'}, {path: 'oStockDataModel>Cbtlv'}, {path: 'oStockDataModel>Material'} ], formatter: '.formatter.statusColor' }"/>
					<!--<m:Text text="{oStockDataModel>Labst}" wrapping="false"/>-->
				</template>
			</Column>
			
			<!--<Column width="8rem" hAlign="Center">-->
			<!--	<m:Label text="Available Qty"/>-->
			<!--	<template>-->
				
			<!--	<m:Text text="{oStockDataModel>ALabst}" wrapping="false"/>-->
			<!--	</template>-->
			<!--</Column>-->
				<Column width="9rem" hAlign="Center">
				<m:Label text="RunRate(13 Weeks)"/>
				<template>
					<m:Text text="{oStockDataModel>RunRate}"/>
				</template>
			</Column>
			
			
			<Column width="6rem" hAlign="Center">
				<m:Label text="Stock in hand"/>
				<template>
					<m:Text text="{oStockDataModel>Labst}"
				/>
						<!--state="{ parts: [ {path: 'oStockDataModel>Labst'}, {path: 'oStockDataModel>Crtlv'}, {path: 'oStockDataModel>Cytlv'}, {path: 'oStockDataModel>Cgtlv'}, {path: 'oStockDataModel>Cbtlv'}, {path: 'oStockDataModel>Matnr'} ], formatter: '.formatter.statusColor' }"/>-->
					<!--<m:Text text="{oStockDataModel>Labst}" wrapping="false"/>-->
				</template>
			</Column>
			
			<Column width="6rem" hAlign="Center">
				<m:Label text=" Open SO"/>
				<template>
					<m:Text text="{= ${oStockDataModel>OsalesOrder} === 'So' ? ' ' : ${oStockDataModel>OsalesOrder} }"/>
					<!--<m:Text text="{oStockDataModel>Labst}" wrapping="false"/>-->
				</template>
			</Column>
			
			<!--		<Column width="9rem">-->
			<!--	<m:Label text="Total Qunty"/>-->
			<!--	<template>-->
			<!--		<m:ObjectNumber number="{oStockDataModel>Tlabst}"-->
			<!--			state="{ parts: [ {path: 'oStockDataModel>Tlabst'}, {path: 'oStockDataModel>Crtlv'}, {path: 'oStockDataModel>Cytlv'}, {path: 'oStockDataModel>Cgtlv'}, {path: 'oStockDataModel>Cbtlv'}, {path: 'oStockDataModel>Matnr'} ], formatter: '.formatter.statusColor' }"/>-->
			<!--<m:Text text="{oStockDataModel>Labst}" wrapping="false"/>-->
			<!--	</template>-->
			<!--</Column>-->
			<Column width="8rem" hAlign="Center">
				<m:Label text="Criticle threshold"/>
				<template>
					<m:ObjectNumber number="{= ${oStockDataModel>Crtlv} === 'crtlv' ? ' ' : '0 - ' + ${oStockDataModel>Crtlv} } " state="Error"></m:ObjectNumber>
			
			
				</template>
			</Column>
			<Column width="8rem" hAlign="Center">
				<m:Label text="Warning threshold"/>
				<template>
					<m:ObjectNumber
						number="{= ${oStockDataModel>Cytlv} === 'cytlv' ? ' ' : ${oStockDataModel>Crtlv} - 1+2 + ' - ' + ${oStockDataModel>Cytlv} } "
						state="Warning"></m:ObjectNumber>
				</template>
			</Column>
			<Column width="8rem" hAlign="Center">
				<m:Label text="Success threshold"/>
				<template>
					<m:ObjectNumber
						number="{= ${oStockDataModel>Cgtlv} === 'cgtlv' ? ' ' : ${oStockDataModel>Cytlv} - 1+2 + ' - ' + ${oStockDataModel>Cgtlv} } "
						state="Success"></m:ObjectNumber>
				</template>
			</Column>
			<Column width="8rem" hAlign="Center">
				<m:Label text="Excess threshold"/>
				<template>
					<m:ObjectNumber
						number="{= ${oStockDataModel>Cbtlv} === 'cbtlv' ? ' ' : ${oStockDataModel>Cgtlv} - 1+2 + ' - ' + ${oStockDataModel>Cbtlv} } "
						state="{ parts: [ {path: 'oStockDataModel>Cbtlv'} ], formatter: '.formatter.onBlueStage'}"/>
				</template>
			</Column>
			<!--<Column width="13rem" sorted="true">-->
			<!--	<m:Label text="Current Threshold"/>-->
			<!--	<template>-->
			<!--		<m:ObjectNumber number="{ path : 'oStockDataModel>CurrentThread' }"-->
			<!--			state="{= ${oStockDataModel>CurrentThread} > ${oStockDataModel>Labst} ? 'Warning' : ${oStockDataModel>Labst} > ${oStockDataModel>CurrentThread} ? 'Error' : 'Success'}"/>-->
			<!--	</template>-->
			<!--</Column>-->
			<!--<Column width="13rem">-->
			<!--	<m:Label text="Previous Threshold"/>-->
			<!--	<template>-->
			<!--		<m:Text text="{oStockDataModel>PreviousThread}" wrapping="false"/>-->
			<!--	</template>-->
			<!--</Column>-->
			
			
			
			
			
						<Column width="8rem" hAlign="Center">
				<m:Label text=" Open PO Qty"/>
				<template>
						<m:Text text="{ path: 'oStockDataModel>OpenPOQty'}"
						wrapping="false"/>
				
				
				</template>
			</Column>
						<Column width="8rem" hAlign="Center">
				<m:Label text=" Open PO Date"/>
				<template>
						<m:Text text="{ path: 'oStockDataModel>DocDate', type: 'sap.ui.model.type.Date', formatOptions: { pattern: 'yyyy-MM-dd' } }"
						wrapping="false"/>
				
					<!--<m:Text text="{oStockDataModel>Labst}" wrapping="false"/>-->
				</template>
			</Column>
			
			
				<Column width="8rem" hAlign="Center">
				<m:Label text="GR Date"/>
				<template>
						<m:Text text="{ path: 'oStockDataModel>OpenPODate', type: 'sap.ui.model.type.Date', formatOptions: { pattern: 'yyyy-MM-dd' } }"
						wrapping="false"/>
				
					<!--<m:Text text="{oStockDataModel>Labst}" wrapping="false"/>-->
				</template>
			</Column>
			<!--<Column width="8rem" hAlign="Center">-->
			<!--	<m:Label text="Date"/>-->
			<!--	<template>-->
			<!--		<m:Text text="{ path: 'oStockDataModel>Changedon', type: 'sap.ui.model.type.Date', formatOptions: { pattern: 'yyyy-MM-dd' } }"-->
			<!--			wrapping="false"/>-->
			<!--	</template>-->
			<!--</Column>-->
			<Column width="13rem" sorted="true" visible="false">
				<m:Label text="Color"/>
				<template>
					<m:ObjectIdentifier title="{path: 'oStockDataModel>Color'}"/>
				</template>
			</Column>
			<Column width="8rem" hAlign="Center">
				<m:Label text="Action"/>
				<template>
					<m:HBox>
						<m:Button id="Edit1" icon="sap-icon://edit-outside" press="onPressMaterialEdit"  class="sapUiSmallMarginEnd"/>
						<m:Button id="idRefill" text="Refill" press="onSavePurchaseOrder" ariaLabelledBy="editButtonLabel" class="GreenClassButton"/>
					</m:HBox>
				</template>
			</Column>
		</columns>
	</TreeTable>





</core:FragmentDefinition>